---
title: "Reproducible documents"
author: "Jonas"
format: html
---

```{r setup}
#| message: false
#| warning: false
library(tidyverse)
library(NHANES)
nhanes_small <- read_csv(here::here("data/nhanes_small.csv"))
```

```{r}
nhanes_small
```

## Table of results

```{r}
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  group_by(diabetes, education) %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    mean_bmi = mean(bmi, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  knitr::kable(caption = "Mean values of Age and BMI for each education and diabetes status.")
```

## Prettier table

```{r prettier-table}
#| echo: false
#| warning: false
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  group_by(diabetes, education) %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    mean_bmi = mean(bmi, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  mutate(
    # Task 2a.
    mean_age = round(mean_age, 1),
    mean_bmi = round(mean_bmi, 1),
    # Task 2b.
    education = str_to_sentence(education),
    education = forcats::fct_relevel(education, c("8th grade", "9 - 11th grade", "High school", "Some college", "College grad"))
  ) %>%
  arrange(diabetes, education) %>%
  rename(
    # Task 3.
    "Diabetes Status" = diabetes,
    "Education" = education,
    "Mean Age" = mean_age,
    "Mean BMI" = mean_bmi
  ) %>%
  knitr::kable(caption = "Mean values of Age and BMI for each education and diabetes status.")
```

![Hello](images/kitten.jpg){#fig-kitten-attack width="50%" height="50%"}

## Viualizing data

```{r}
#| warning: true
# Create histogram for BMI
ggplot(nhanes_small, aes(x = bmi)) +
  geom_histogram()
```

```{r}
# Create histogram for BMI
ggplot(nhanes_small, aes(x = bmi)) +
  geom_histogram(na.rm = TRUE)
```

```{r}
nhanes_small %>%
  filter(bmi <= 60) %>%
  ggplot(aes(x = bmi)) +
  geom_histogram()
```

BMI distribution in NHANES dataset was cisualised in @fig-bmi-histo. 

```{r}
#| fig-cap: "Distribution of BMI."
#| label: fig-bmi-histo

nhanes_small %>%
  filter(bmi <= 60) %>%
  ggplot(aes(x = bmi)) +
  geom_histogram(na.rm = TRUE)
```

```{r}
# Create count barplot for education
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = diabetes)) +
  geom_bar()
```

```{r}
# Create count barplot for education
nhanes_small %>%
  filter(!is.na(education)) %>%
  mutate(education = forcats::fct_relevel(education, c("8th Grade", "9 - 11th Grade", "High School", "Some College", "College Grad"))) %>%
  arrange(education) %>%
  ggplot(aes(x = education)) +
  geom_bar()
```

```{r}
#| label: fig-diabetes-education
#| fig-cap: "Counts of diabetes and education in NHANES"
#| fig-subcap:
#|   - "Number of those with or without diabetes."
#|   - "Number of those with different educational status."
#| layout-ncol: 2


nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = diabetes)) +
  geom_bar()

# Create count barplot for education
nhanes_small %>%
  filter(!is.na(education)) %>%
  mutate(education = forcats::fct_relevel(education, c("8th Grade", "9 - 11th Grade", "High School", "Some College", "College Grad"))) %>%
  arrange(education) %>%
  ggplot(aes(x = education)) +
  geom_bar()
```

```{r}
nhanes_small %>%
    filter(!is.na(bp_sys_ave),!is.na(bmi)) %>% 
    ggplot(aes(x = bmi, y = bp_sys_ave)) + 
    geom_hex() +
    geom_smooth()
```

```{r}
nhanes_small %>%
    filter(!is.na(education), !is.na(diabetes)) %>%
    mutate(education = forcats::fct_relevel(education, c("8th Grade", "9 - 11th Grade", "High School", "Some College", "College Grad"))) %>%
  arrange(education) %>%
    ggplot(aes(x = diabetes, fill = education)) +
    geom_bar()
```

```{r}
# "dodged" bar plot
nhanes_small %>%
    filter(!is.na(education), !is.na(diabetes)) %>%
    mutate(education = forcats::fct_relevel(education, c("8th Grade", "9 - 11th Grade", "High School", "Some College", "College Grad"))) %>%
  arrange(education) %>%
    ggplot(aes(x = diabetes, fill = education)) +
    geom_bar(position = position_dodge())
```

### Plotting continious and discrete variables

```{r}
# Using mixed data
nhanes_small %>%
    filter(!is.na(diabetes), bmi <= 60) %>%
    ggplot(aes(x = diabetes, y = bmi, fill = diabetes)) +
    geom_violin(na.rm = TRUE)
```

## Exercise to make plots with one or two variables.

```{r}
nhanes_exercise <- NHANES %>%
  rename_with(snakecase::to_snake_case) %>%
  rename(sex = gender)
```

```{r}
#| label: fig-age-plots
#| fig-cap: "Distribution of age and distribution of age at diabetes diagnosis"
#| fig-subcap:
#|   - "Distribution of age."
#|   - "Distribution of age at diabetes diagnosis"
#| layout-ncol: 2

nhanes_exercise %>% 
    ggplot(aes(x = age)) +
    geom_density(na.rm = TRUE)

nhanes_exercise %>% 
    ggplot(aes(x = diabetes_age)) +
    geom_density(na.rm = TRUE)
```

```{r}
#| label: fig-smoke-age
#| fig-cap: Smokers vs non-smokers above the age of 20
nhanes_exercise %>% 
    filter(age >= 20, !is.na(smoke_now)) %>% 
    ggplot(aes(x = smoke_now)) +
    geom_bar()
```

```{r}
#| label: fig-mean-arterial-pressure
#| fig-cap: This is someting about mean arterial bloodpressure
nhanes_exercise %>% 
    mutate(mean_arterial_pressure = (bp_sys_ave + (2 * bp_dia_ave)/3)) %>% 
    ggplot(aes(x = bmi, y = mean_arterial_pressure)) +
    geom_hex(na.rm = TRUE) +
    geom_smooth()
```

### Plotting three or more variables

```{r}
# Plot systolic blood pressure in relation to educational status and diabetes
nhanes_small %>% 
    filter(!is.na(diabetes), !is.na(education)) %>% 
    ggplot(aes(x = education, y = bp_sys_ave, colour = diabetes)) +
    geom_boxplot(na.rm = TRUE)
```

```{r}
# Plot BMI in relation to systolic blood pressure and age
nhanes_small %>%  
    ggplot(aes(x = bmi, y = bp_sys_ave, colour = age)) +
    geom_point(na.rm = TRUE)
```
